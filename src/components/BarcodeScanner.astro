---
import { initDb } from '../utils/database'
await initDb()
---

<div class="scanner-container">
  <video id="video" class="w-full"></video>
  <div id="result" class="mt-4 p-4 bg-gray-100 rounded-lg hidden"></div>
</div>

<script>
  import { BarcodeReader } from './scanner/BarcodeReader'

  const reader = new BarcodeReader()
  const resultElement = document.getElementById('result')

  async function initScanner() {
    try {
      const devices = await reader.getVideoDevices()

      if (devices.length > 0) {
        if (devices.length === 1) {
          await startScanning(devices[0].deviceId)
        } else {
          setupDeviceSelection(devices)
        }
      }
    } catch (err) {
      console.error('Scanner initialization failed:', err)
    }
  }

  async function startScanning(deviceId: string) {
    try {
      await reader.startScanning(deviceId, 'video', async (barcode) => {
        if (resultElement) {
          resultElement.textContent = `Scanned: ${barcode}`
          resultElement.classList.remove('hidden')
        }

        await processBarcode(barcode)
      })
    } catch (err) {
      console.error('Scanning failed:', err)
    }
  }

  async function processBarcode(barcode: string) {
    try {
      const response = await fetch('/api/scan', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ barcode }),
      })

      if (response.ok) {
        const data = await response.json()
        window.location.reload() // Refresh to show new set
      }
    } catch (err) {
      console.error('Failed to process barcode:', err)
    }
  }

  function setupDeviceSelection(devices: MediaDeviceInfo[]) {
    startScanning(devices[0].deviceId)
  }

  initScanner()

  window.addEventListener('unload', () => {
    reader.reset()
  })
</script>

<style>
  .scanner-container {
    max-width: 640px;
    margin: 0 auto;
  }

  #video {
    border-radius: 8px;
    overflow: hidden;
  }
</style>
